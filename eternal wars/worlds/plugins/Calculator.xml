<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>

<plugin
   name="Calculator"
   author="Nyano"
   id="ba1329d6355e728dd100fd41"
   language="Lua"
   purpose="Provides a simple calculator."
   requires="5.00"
  >

<description trim="y">
<![CDATA[
To calculate something enter "=" followed by an expression which can be evaluated by Lua.
The functions in the math, bit, string, utils and world libraries can be used without prefixing them with the library name.
In addition, you can use hex, oct, bin functions to convert to those bases for printing.
If the number is small (with an exponent shown) it is echoed again with up to 15 decimal places.

]]>
</description>

</plugin>

<aliases>
  <alias
   enabled="y"
   match="=*"
   send_to="12"
   sequence="100"
  >
  <send>
    -- Useful number conversions
    bit.hex = function(num) return bit.tostring(num, 16) end
    bit.oct = function(num) return bit.tostring(num, 8) end
    bit.bin = function(num) return bit.tostring(num, 2) end
    result = setfenv(assert(loadstring "return %1"), setmetatable({}, {__index = function(_, n) return math[n] or bit[n] or string[n] or utils[n] or world[n] end}))()
    -- Turn result into a string, to see if it has "e-xxx" in it.
    formatted_result = tostring(result)
    -- If an exponent shown, recalculate as a decimal without exponent
    if (string.match(formatted_result, "e%%-")) then
      local extra = string.format(" (%%0.15f)", result)
      -- Append number without exponent, omitting trailing zeroes
      formatted_result = formatted_result..string.gsub(extra, "0+%%)", ")")
    end
    -- Display result
    Note("%1 = ", formatted_result)
  </send>
  </alias>
</aliases>

</muclient>
