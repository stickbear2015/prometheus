;* Keys for controlling sounds
#key f9 {
#math Vol {@Vol - 5};
#if {@Vol < 5} {@Vol = 5};
#If {@SilentMode = 0} {#play {Prometheus\General\Misc\Beep*5.wav} @Vol};
#say {Volume is @Vol percent}} global  //volume down control
#key f10 {
#math Vol {@Vol + 5};
#if {@Vol > 100} {@Vol = 100};
#If {@SilentMode = 0} {#play {Prometheus\General\Misc\Beep*5.wav} @Vol};
#say {Volume is @Vol percent}} global  //volume up control
#key control-f9 {
#math roomvol {@roomvol - 5};
#if {@roomvol < 5} {@roomvol = 5};
#If {@SilentMode = 0} {#play {Prometheus\General\Misc\Beep*5.wav} @Vol};
#say {Room Sound Volume is @roomvol percent}; #If {@RoomSoundPlaying = 1} {#pc @RoomHandle volume @roomvol}} ambiences|global  //background volume down control
#key control-f10 {
#math roomvol {@roomvol + 5};
#if {@roomvol > 100} {@roomvol = 100};
#If {@SilentMode = 0} {#play {Prometheus\General\Misc\Beep*5.wav} @Vol};
#say {Room Sound Volume is @roomvol percent}; #If {@RoomSoundPlaying = 1} {#pc @RoomHandle volume @roomvol}} ambiences|global  //background volume up control
#key f11 {
#Var SilentMode {%eval(NOT @SilentMode)};
#if {@SilentMode} {
#Say {Sounds off}; #class global disable; #If {@Mining = 1} {#PC @MineHandle stop; #Var Mining 0};
#If {@BatteryDrain = 1} {#pc @BatteryHandle stop; #Var BatteryDrain 0}; #If {@Digging = 1} {#pc @DigHandle stop; #Var Digging 0}; #If {@Scanning = 1} {#pc @ScanHandle stop; #Var Scanning 0}} {
#say {Sounds on}; #class global enable}} {}  //  Used for muting or unmuting sounds globally in the sound pack.
#key control-f11 {
#Var RoomSounds {%eval(NOT @RoomSounds)};
#if {@RoomSounds = 0} {
#Say {Room sounds off};
#If {@RoomSoundPlaying = 1} {
#pc @RoomHandle stop;
#Var RoomSoundPlaying 0}; #If {@CurrentRoom <> ""} {#Var CurrentRoom ""}; #class ambiences disable} {
#say {Room sounds on}; #class ambiences enable;look}} global //  Used for muting or unmuting room sounds in the sound pack.
#key f12 {
#Var RedAlert {%eval(NOT @RedAlert)};
#if {@RedAlert = 0} {
#Say {Red alert sounds off}; #If {@AlertPlaying = 1} {#pc @AlertHandle stop; #Var AlertPlaying 0}; #class RedAlert disable} {
#say {Red alert sounds on}; #class RedAlert enable}} global  //  Used for muting or unmuting red alert sounds.
#key control-f12 {
#Var Socials {%eval(NOT @Socials)};
#if {@Socials = 0} {
#Say {Social sounds off}; #class socials disable} {
#say {Social sounds on}; #class socials enable}} global  //  Used for muting or unmuting social sounds.

#Key {Alt-I} {north} {}
#Key {Alt-K} {south} {}
#Key {Alt-J} {west} {}
#Key {Alt-L} {east} {}
#Key {Alt-O} {northeast} {}
#Key {Alt-U} {northwest} {}
#Key {Alt-M} {southwest} {}
#Key {Alt-.} {southeast} {}
#Key {Alt-Y} {up} {}
#Key {Alt-H} {down} {}
#Key {Alt-N} {in} {}
#Key {Alt-B} {out} {}
;* Numpad special movement keys
#Key {Numpad1} {1}
#Key {Control-Numpad1} {sw}
#Key {Numpad2} {2}
#Key {Control-Numpad2} {s}
#Key {Numpad3} {3}
#Key {Control-Numpad3} {se}
#Key {Numpad4} {4;}
#Key {Control-Numpad4} {w}
#Key {Control-Numpad5} {look}
#Key {Numpad6} {6}
#Key {Control-Numpad6} {e}
#Key {Numpad7} {7}
#Key {Control-Numpad7} {nw}
#Key {Numpad8} {8}
#Key {Control-Numpad8} {n}
#Key {Numpad9} {9}
#Key {Control-Numpad9} {ne}
#Key {Numpad0} {coords}
#Key {Control-Numpad0} {exits}
#Key {Numpad/} {auto}
#key {Control-Numpad/} {in}
#Key {Numpad*} {man}
#Key {Control-Numpad*} {out}
#Key {Shift-Control-Numpaddash} {d}
#Key {Shift-Control-Numpad+} {u}

;* Fly mode
#key Control-Shift-F {
#Var FlyMode {%eval(NOT @FlyMode)};
#If {@FlyMode = 0} {
#Say {Fly mode off};
#class fly disable} {
#Say {Fly mode on.};
#class fly enable}} global
#key Alt-Shift-F {
#If {@FlyType = 0} {
#Var FlyType 1;
#Say {Fly mode type changed to left-handed.}} {
#If {@FlyType = 1} {
#Var FlyType 2;
#Say {Fly mode type changed to right-handed.}} {
#If {@FlyType = 2} {
#Var FlyType 0;
#Say {Fly mode type changed to exit-based.}}}}} {fly}

;* Footsteps
#Key Shift-F9 {
#Var Footsteps {%eval(NOT @Footsteps)};
#If {@Footsteps = 0} {
#Say {Footsteps disabled};
#class footsteps disable} {
#Say {Footsteps enabled};
#class footsteps enable}} global
#Key Shift-F10 {
#Var PlayFootsteps {%eval(NOT @PlayFootsteps)};
#If {@PlayFootsteps = 0} {
#Say {Footstep sounds muted}} {
#Say {Footstep sounds unmuted}}} {footsteps|global}
#Key Shift-F11 {
#Var GagFootsteps {%eval(NOT @GagFootsteps)};
#If {@GagFootsteps = 0} {
#Say {Footsteps ungagged}} {
#Say {Footsteps gagged}}} {footsteps|global}
#Key Alt-F9 {
#Var Channels {%eval(NOT @Channels)};
#If {@Channels = 0} {
#Say {Channel sounds muted};
#class channels disable} {
#Say {Channel sounds unmuted};
#class channels enable}} global
#Key Alt-F10 {
#Var Devices {%eval(NOT @Devices)};
#If {@Devices = 0} {
#Say {Device sounds muted};
#class devices disable} {
#Say {Device sounds unmuted};
#class devices enable}} global
#Key Alt-F11 {
#Var GagMode {%eval(NOT @GagMode)};
#If {@GagMode = 0} {
#Say {Speech gag on}; #GagOn voice} {
#Say {Speech gag off}; #UnGagOn}} {global}
#key ctrl-shift-q {
#Var QuotationToggle {%eval(NOT @QuotationToggle)};
#if {@QuotationToggle = 1} {
#say {Quotation marks around text are now being gagged.}} {
#say {Quotation marks around text are no longer being gagged.}}}
#key ctrl-shift-c {
#Var PipeToggle {%eval(NOT @PipeToggle)};
#if {@PipeToggle = 1} {
#say {Non-damage commpipe information gagged.}} {
#say {Commpipe no longer gagged.}}}
